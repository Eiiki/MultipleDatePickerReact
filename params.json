{"name":"MultipleDatePickerReact","tagline":"","body":"### What is MultipleDatePickerReact ?\r\nMultipleDatePicker is a React component to show a simple calendar allowing user to select multiple dates. It's a fork of [http://arca-computing.github.io/MultipleDatePicker/](http://arca-computing.github.io/MultipleDatePicker/)\r\n\r\n### Get it bower style\r\n`bower install multiple-date-picker-react`\r\n\r\n### Get it git style\r\n`git clone https://github.com/arca-computing/MultipleDatePickerReact.git`\r\n\r\n### Time to use it\r\n#### Include files\r\n\r\n    <script type=\"text/javascript\" src=\"multipleDatePicker.min.js\"></script>\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"multiple-date-picker.css\"/>\r\n\r\nDon't forget to include MomentJS, React and ReactDom js files\r\n\r\n#### Options\r\n\r\n    <MultipleDatePicker\r\n        month={} //any type MomentJS can use in constructor (moment date, timestamp, UTC formated date ...)\r\n        sundayFirstDay={true/false} //boolean, false default\r\n        highlightDays={myHighlightDays} //details below\r\n        weekDaysOff=[0, 6] //days never selectable in a week (0 = Sunday, 1 = Monday ... 6 = Saturday)\r\n        dayClick={dayClickCallback} //details below\r\n        dayHover={dayHoverCallback} //details below\r\n        changeMonth={monthChangeCallback} //details below\r\n        callbackContext={this} //context given to every callback\r\n    />\r\n\r\n##### month\r\nAny type MomentJS can use in constructor, default will be current month\r\n\r\n##### highlightDays\r\nHere is the major difference with Angular version, now we use only one parameter to change days state in calendar (except for recurrent week days off with `weekDaysOff`).\r\n\r\n    day: MOMENT/TIMESTAMP, //any type MomentJS can use in constructor\r\n    css: STRING, //chained css\r\n    notSelectable: BOOLEAN, //default false, true so day will not be selectable (dayClick callback not called and select state will not change)\r\n    selected: BOOLEAN, //selected or not by default\r\n    title: STRING //html title property\r\n\r\nA simple example\r\n\r\n    var myHighlightDays = [\r\n\t{\r\n\t    day: moment(1438560000000), //03 august 2015 is my birthday\r\n\t    css: 'birthday', //a beautiful color for this special day\r\n\t    notSelectable: true, //can't change this magic day state\r\n\t    selected: true,\r\n\t    title: 'My birthday today !!!'\r\n\t},\r\n        {\r\n\t    day: moment(1438646400000), //04 august 2015\r\n\t    notSelectable: true //everyone is off this day, hangover -_-\r\n\t},\r\n        {\r\n\t    day: moment(xxx), //a default selected day\r\n\t    selected: true\r\n\t},\r\n        {\r\n\t    day: moment(yyy), //another default selected day\r\n\t    selected: true\r\n\t}\r\n    ];\r\n\r\nWith this property you can handle any kind of day : events, days-off, pre-selected days ...\r\n\r\n##### dayClick\r\nCallback called when a day is clicked, params are the day (MomentJS object for easy manipulations) and the select state before clicking.\r\n\r\nReturning true will change the day select state.\r\n\r\n    var dayClickCallback = function(momentDate, selectedBefore){\r\n        //do whatever you want\r\n        //return true will change the select state\r\n        //return nothing or false will not change the select state\r\n    };\r\n\r\n##### dayHover\r\nCallback called when mouse enter a day, params are the day (MomentJS object for easy manipulations) and the select state.\r\n\r\n    var dayHoverCallback = function(momentDate, selectedBefore){\r\n        //do whatever you want\r\n    };\r\n\r\n\r\n##### changeMonth\r\nCallback called when trying to change month, params are a day in the month (MomentJS object for easy manipulation) dans the increment.\r\n\r\nReturning true will allow changing month.\r\n\r\n    var monthChangeCallback = function(momentDate, increment){\r\n        //example, we don't allow navigation in the futur or back to more than 2 months\r\n        //we can inline condition but for demo purpose we use dummy if\r\n\r\n        var newMonth = momentDate.add(increment, 'MONTH');\r\n        if(newMonth.isBefore(moment().subtract(2, 'MONTH'))){\r\n            return false;\r\n        }\r\n\r\n        if(newMonth.isAfter(moment())){\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n### What's next ?\r\nWe created this component to have a simple calendar with multi-dates selection. We will keep it simple but any improvement is welcome.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}